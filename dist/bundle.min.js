(()=>{"use strict";var e={156:function(e,t,r){var a=this&&this.__createBinding||(Object.create?function(e,t,r,a){void 0===a&&(a=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,a,n)}:function(e,t,r,a){void 0===a&&(a=r),e[a]=t[r]}),n=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||a(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0});const s=r(927);document.addEventListener("DOMContentLoaded",()=>{console.log("打大A游戏正在加载...");const e=new s.GameUI;window.gameUI=e,console.log("打大A游戏已加载完成！")}),n(r(458),t),n(r(493),t),n(r(709),t),n(r(745),t),n(r(731),t),n(r(927),t),n(r(361),t)},361:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.cardsToString=t.cardToString=t.sortCards=t.compareCards=t.shuffleDeck=t.createFullDeck=t.createCard=void 0;const a=r(458);function n(e,t){let r;return r=t===a.Rank.LITTLE_JOKER||t===a.Rank.BIG_JOKER?a.RankDisplay[t]:`${a.SuitDisplay[e]}${a.RankDisplay[t]}`,{suit:e,rank:t,display:r}}function s(e,t){return e.rank-t.rank}function i(e){return e.display}t.createCard=n,t.createFullDeck=function(){const e=[];for(const t of Object.values(a.Suit))for(let r=a.Rank.THREE;r<=a.Rank.ACE;r++)e.push(n(t,r));return e.push(n(null,a.Rank.LITTLE_JOKER)),e.push(n(null,a.Rank.BIG_JOKER)),e},t.shuffleDeck=function(e){const t=[...e];for(let e=t.length-1;e>0;e--){const r=Math.floor(Math.random()*(e+1));[t[e],t[r]]=[t[r],t[e]]}return t},t.compareCards=s,t.sortCards=function(e){return[...e].sort(s)},t.cardToString=i,t.cardsToString=function(e){return e.map(i).join(" ")}},458:(e,t)=>{var r,a,n;Object.defineProperty(t,"__esModule",{value:!0}),t.RankDisplay=t.SuitDisplay=t.CardType=t.Rank=t.Suit=void 0,function(e){e.SPADES="spades",e.HEARTS="hearts",e.DIAMONDS="diamonds",e.CLUBS="clubs"}(r=t.Suit||(t.Suit={})),function(e){e[e.THREE=3]="THREE",e[e.FOUR=4]="FOUR",e[e.FIVE=5]="FIVE",e[e.SIX=6]="SIX",e[e.SEVEN=7]="SEVEN",e[e.EIGHT=8]="EIGHT",e[e.NINE=9]="NINE",e[e.TEN=10]="TEN",e[e.JACK=11]="JACK",e[e.QUEEN=12]="QUEEN",e[e.KING=13]="KING",e[e.ACE=14]="ACE",e[e.LITTLE_JOKER=15]="LITTLE_JOKER",e[e.BIG_JOKER=16]="BIG_JOKER"}(a=t.Rank||(t.Rank={})),(n=t.CardType||(t.CardType={})).SINGLE="single",n.PAIR="pair",n.TRIPLE="triple",n.TRIPLE_WITH_SINGLE="triple_with_single",n.TRIPLE_WITH_PAIR="triple_with_pair",n.STRAIGHT="straight",n.DOUBLE_STRAIGHT="double_straight",n.TRIPLE_STRAIGHT="triple_straight",n.FOUR_WITH_TWO="four_with_two",n.BOMB="bomb",n.JOKER_BOMB="joker_bomb",n.INVALID="invalid",t.SuitDisplay={[r.SPADES]:"♠",[r.HEARTS]:"♥",[r.DIAMONDS]:"♦",[r.CLUBS]:"♣"},t.RankDisplay={[a.THREE]:"3",[a.FOUR]:"4",[a.FIVE]:"5",[a.SIX]:"6",[a.SEVEN]:"7",[a.EIGHT]:"8",[a.NINE]:"9",[a.TEN]:"10",[a.JACK]:"J",[a.QUEEN]:"Q",[a.KING]:"K",[a.ACE]:"A",[a.LITTLE_JOKER]:"小王",[a.BIG_JOKER]:"大王"}},493:(e,t)=>{var r,a,n;Object.defineProperty(t,"__esModule",{value:!0}),t.calculateWinRate=t.createPlayer=t.PlayerAction=t.PlayerType=t.PlayerStatus=void 0,function(e){e.WAITING="waiting",e.PLAYING="playing",e.FINISHED="finished",e.DISCONNECTED="disconnected"}(r=t.PlayerStatus||(t.PlayerStatus={})),(n=t.PlayerType||(t.PlayerType={})).HUMAN="human",n.AI="ai",(a=t.PlayerAction||(t.PlayerAction={})).PASS="pass",a.PLAY_CARDS="play_cards",a.CALL_LANDLORD="call_landlord",a.GRAB_LANDLORD="grab_landlord",t.createPlayer=function(e,t,a,n){return{id:e,name:t,type:a,status:r.WAITING,cards:[],position:n,score:0,isLandlord:!1,totalGames:0,wins:0}},t.calculateWinRate=function(e,t){return 0===t?0:Math.round(e/t*100*100)/100}},709:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.resetGame=t.getCurrentPlayer=t.getGameResult=t.isGameOver=t.pass=t.playCards=t.passLandlord=t.callLandlord=t.dealCards=t.createGame=t.GamePhase=t.GameState=void 0;const a=r(493),n=r(361),s=r(745);var i,l;function o(e,t){if(e.state!==i.BIDDING)throw new Error("当前不是叫地主阶段");const r=e.players.find(e=>e.id===t);if(!r)throw new Error("玩家不存在");const s=e.players.findIndex(e=>e.id===t);if(s!==e.currentPlayer)throw new Error("不是当前玩家的回合");return e.landlordIndex=s,r.isLandlord=!0,r.cards=[...r.cards,...e.landlordCards],r.cards=(0,n.sortCards)(r.cards),e.moves.push({playerId:t,action:a.PlayerAction.CALL_LANDLORD,timestamp:Date.now()}),e.state=i.PLAYING,e.phase=l.PLAY_CARDS,e.currentPlayer=e.landlordIndex,!0}function d(e){return e.state===i.FINISHED}!function(e){e.WAITING="waiting",e.BIDDING="bidding",e.PLAYING="playing",e.FINISHED="finished",e.PAUSED="paused"}(i=t.GameState||(t.GameState={})),function(e){e.DEAL_CARDS="deal_cards",e.CALL_LANDLORD="call_landlord",e.PLAY_CARDS="play_cards",e.GAME_OVER="game_over"}(l=t.GamePhase||(t.GamePhase={})),t.createGame=function(e,t){if(3!==t.length)throw new Error("打大A需要3个玩家");return{id:e,players:t.map(e=>({...e,status:a.PlayerStatus.WAITING})),deck:[],landlordCards:[],currentPlayer:0,landlordIndex:-1,state:i.WAITING,phase:l.DEAL_CARDS,lastPlayedPattern:null,lastPlayerId:null,moves:[],round:0,passCount:0,startTime:Date.now()}},t.dealCards=function(e){if(e.state!==i.WAITING)throw new Error("游戏状态不正确，无法发牌");const t=(0,n.createFullDeck)(),r=(0,n.shuffleDeck)(t);e.landlordCards=r.slice(0,3);const s=r.slice(3);for(let t=0;t<3;t++){const r=s.slice(17*t,17*(t+1));e.players[t].cards=(0,n.sortCards)(r),e.players[t].status=a.PlayerStatus.PLAYING}e.state=i.BIDDING,e.phase=l.CALL_LANDLORD,e.currentPlayer=0},t.callLandlord=o,t.passLandlord=function(e,t){if(e.state!==i.BIDDING)throw new Error("当前不是叫地主阶段");if(!e.players.find(e=>e.id===t))throw new Error("玩家不存在");if(e.players.findIndex(e=>e.id===t)!==e.currentPlayer)throw new Error("不是当前玩家的回合");return e.moves.push({playerId:t,action:a.PlayerAction.PASS,timestamp:Date.now()}),e.currentPlayer=(e.currentPlayer+1)%3,0!==e.currentPlayer||-1!==e.landlordIndex||o(e,e.players[0].id)},t.playCards=function(e,t,r){if(e.state!==i.PLAYING)throw new Error("当前不是出牌阶段");const n=e.players.find(e=>e.id===t);if(!n)throw new Error("玩家不存在");if(e.players.findIndex(e=>e.id===t)!==e.currentPlayer)throw new Error("不是当前玩家的回合");const o=n.cards.map(e=>e.display),d=r.map(e=>e.display);for(const e of d)if(!o.includes(e))throw new Error(`玩家没有牌: ${e}`);const c=(0,s.identifyCardPattern)(r);if(!(0,s.canPlayCards)(r,e.lastPlayedPattern))throw new Error("无效的牌型或牌型过小");for(const e of r){const t=n.cards.findIndex(t=>t.display===e.display);-1!==t&&n.cards.splice(t,1)}return e.moves.push({playerId:t,action:a.PlayerAction.PLAY_CARDS,cards:[...r],timestamp:Date.now()}),e.lastPlayedPattern=c,e.lastPlayerId=t,e.passCount=0,0===n.cards.length?(n.status=a.PlayerStatus.FINISHED,e.state=i.FINISHED,e.phase=l.GAME_OVER,!0):(e.currentPlayer=(e.currentPlayer+1)%3,!0)},t.pass=function(e,t){if(e.state!==i.PLAYING)throw new Error("当前不是出牌阶段");if(!e.players.find(e=>e.id===t))throw new Error("玩家不存在");if(e.players.findIndex(e=>e.id===t)!==e.currentPlayer)throw new Error("不是当前玩家的回合");return e.moves.push({playerId:t,action:a.PlayerAction.PASS,timestamp:Date.now()}),e.passCount++,e.passCount>=2&&(e.lastPlayedPattern=null,e.lastPlayerId=null,e.passCount=0),e.currentPlayer=(e.currentPlayer+1)%3,!0},t.isGameOver=d,t.getGameResult=function(e){if(!d(e))return{winner:null,isLandlordWin:!1};const t=e.players.find(e=>e.status===a.PlayerStatus.FINISHED);return t?{winner:t,isLandlordWin:t.isLandlord}:{winner:null,isLandlordWin:!1}},t.getCurrentPlayer=function(e){return e.currentPlayer>=0&&e.currentPlayer<e.players.length?e.players[e.currentPlayer]:null},t.resetGame=function(e){e.players.forEach(e=>{e.cards=[],e.status=a.PlayerStatus.WAITING,e.isLandlord=!1}),e.deck=[],e.landlordCards=[],e.currentPlayer=0,e.landlordIndex=-1,e.state=i.WAITING,e.phase=l.DEAL_CARDS,e.lastPlayedPattern=null,e.lastPlayerId=null,e.moves=[],e.round=0,e.passCount=0,e.startTime=Date.now()}},731:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.GameEngine=void 0;const a=r(493),n=r(709);t.GameEngine=class{constructor(){this.game=null,this.gameId="",this.eventListeners=new Map,this.eventListeners.set("gameStart",[]),this.eventListeners.set("gameEnd",[]),this.eventListeners.set("playerMove",[]),this.eventListeners.set("stateChange",[]),this.eventListeners.set("error",[])}createNewGame(e,t){if(3!==t.length)throw new Error("需要3个玩家");const r=t.map((e,t)=>(0,a.createPlayer)(`player_${t}`,e,a.PlayerType.HUMAN,t));return this.game=(0,n.createGame)(e,r),this.gameId=e,this.emit("gameStart",this.game),this.game}startGame(){if(!this.game)throw new Error("游戏尚未创建");if(this.game.state!==n.GameState.WAITING)throw new Error("游戏已经开始");(0,n.dealCards)(this.game),this.emit("stateChange",this.game)}callLandlord(e){if(!this.game)throw new Error("游戏尚未创建");try{const t=(0,n.callLandlord)(this.game,e);return this.emit("playerMove",{playerId:e,action:"call_landlord"}),this.emit("stateChange",this.game),t}catch(e){throw this.emit("error",e),e}}passLandlord(e){if(!this.game)throw new Error("游戏尚未创建");try{const t=(0,n.passLandlord)(this.game,e);return this.emit("playerMove",{playerId:e,action:"pass_landlord"}),this.emit("stateChange",this.game),t}catch(e){throw this.emit("error",e),e}}playCards(e,t){if(!this.game)throw new Error("游戏尚未创建");try{const r=(0,n.playCards)(this.game,e,t);if(this.emit("playerMove",{playerId:e,action:"play_cards",cards:t}),this.emit("stateChange",this.game),(0,n.isGameOver)(this.game)){const e=(0,n.getGameResult)(this.game);this.emit("gameEnd",e)}return r}catch(e){throw this.emit("error",e),e}}pass(e){if(!this.game)throw new Error("游戏尚未创建");try{const t=(0,n.pass)(this.game,e);return this.emit("playerMove",{playerId:e,action:"pass"}),this.emit("stateChange",this.game),t}catch(e){throw this.emit("error",e),e}}getGameState(){return this.game}getCurrentPlayer(){return this.game?(0,n.getCurrentPlayer)(this.game):null}getPlayerCards(e){if(!this.game)return[];const t=this.game.players.find(t=>t.id===e);return t?t.cards:[]}isPlayerTurn(e){if(!this.game)return!1;const t=(0,n.getCurrentPlayer)(this.game);return!!t&&t.id===e}resetGame(){if(!this.game)throw new Error("游戏尚未创建");(0,n.resetGame)(this.game),this.emit("stateChange",this.game)}getGameStats(){return this.game?{gameId:this.game.id,playersCount:this.game.players.length,currentState:this.game.state,currentPhase:this.game.phase,currentPlayer:this.getCurrentPlayer()?.name||"Unknown",landlord:this.game.players.find(e=>e.isLandlord)?.name||"None",movesCount:this.game.moves.length,gameTime:Date.now()-this.game.startTime}:null}addEventListener(e,t){this.eventListeners.has(e)||this.eventListeners.set(e,[]),this.eventListeners.get(e).push(t)}removeEventListener(e,t){if(this.eventListeners.has(e)){const r=this.eventListeners.get(e),a=r.indexOf(t);a>-1&&r.splice(a,1)}}emit(e,t){this.eventListeners.has(e)&&this.eventListeners.get(e).forEach(r=>{try{r(t)}catch(t){console.error(`Error in event listener for ${e}:`,t)}})}validateGameState(){if(!this.game)return!1;if(3!==this.game.players.length)return!1;switch(this.game.state){case n.GameState.WAITING:return this.game.players.every(e=>0===e.cards.length);case n.GameState.BIDDING:return this.game.players.every(e=>17===e.cards.length)&&3===this.game.landlordCards.length;case n.GameState.PLAYING:const e=this.game.players.find(e=>e.isLandlord);return void 0!==e&&20===e.cards.length;case n.GameState.FINISHED:return this.game.players.some(e=>0===e.cards.length);default:return!1}}getPlayableCards(e){if(!this.game)return[];const t=this.game.players.find(t=>t.id===e);return t?t.cards.map(e=>[e]):[]}destroy(){this.game=null,this.gameId="",this.eventListeners.clear()}}},745:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.canPlayCards=t.compareCardPatterns=t.identifyCardPattern=void 0;const a=r(458),n=r(361);function s(e){const t=new Map;return e.forEach(e=>{t.set(e.rank,(t.get(e.rank)||0)+1)}),t}function i(e,t=5){if(e.length<t)return!1;if(e.some(e=>e>=a.Rank.ACE))return!1;const r=[...e].sort((e,t)=>e-t);for(let e=1;e<r.length;e++)if(r[e]-r[e-1]!==1)return!1;return!0}function l(e){return 1!==e.length?null:{type:a.CardType.SINGLE,cards:[...e],mainRank:e[0].rank,power:e[0].rank}}function o(e){if(2!==e.length)return null;const t=s(e),r=Array.from(t.keys());return 1===r.length&&2===t.get(r[0])?{type:a.CardType.PAIR,cards:[...e],mainRank:r[0],power:r[0]}:null}function d(e){if(3!==e.length)return null;const t=s(e),r=Array.from(t.keys());return 1===r.length&&3===t.get(r[0])?{type:a.CardType.TRIPLE,cards:[...e],mainRank:r[0],power:r[0]}:null}function c(e){if(4!==e.length)return null;const t=s(e),r=Array.from(t.keys());if(2===r.length){let n=null,s=null;for(const e of r)3===t.get(e)?n=e:1===t.get(e)&&(s=e);if(null!==n&&null!==s)return{type:a.CardType.TRIPLE_WITH_SINGLE,cards:[...e],mainRank:n,power:n}}return null}function u(e){if(5!==e.length)return null;const t=s(e),r=Array.from(t.keys());if(2===r.length){let n=null,s=null;for(const e of r)3===t.get(e)?n=e:2===t.get(e)&&(s=e);if(null!==n&&null!==s)return{type:a.CardType.TRIPLE_WITH_PAIR,cards:[...e],mainRank:n,power:n}}return null}function h(e){if(e.length<5)return null;const t=s(e),r=Array.from(t.keys());if(r.some(e=>1!==t.get(e)))return null;if(i(r)){const t=Math.min(...r);return{type:a.CardType.STRAIGHT,cards:(0,n.sortCards)(e),mainRank:t,power:t}}return null}function m(e){if(e.length<6||e.length%2!=0)return null;const t=s(e),r=Array.from(t.keys());if(r.some(e=>2!==t.get(e)))return null;if(i(r,3)){const t=Math.min(...r);return{type:a.CardType.DOUBLE_STRAIGHT,cards:(0,n.sortCards)(e),mainRank:t,power:t}}return null}function y(e){if(4!==e.length)return null;const t=s(e),r=Array.from(t.keys());return 1===r.length&&4===t.get(r[0])?{type:a.CardType.BOMB,cards:[...e],mainRank:r[0],power:r[0]+1e3}:null}function p(e){if(2!==e.length)return null;const t=e.map(e=>e.rank).sort((e,t)=>e-t);return t[0]===a.Rank.LITTLE_JOKER&&t[1]===a.Rank.BIG_JOKER?{type:a.CardType.JOKER_BOMB,cards:[...e],mainRank:a.Rank.BIG_JOKER,power:2e3}:null}function g(e){if(0===e.length)return{type:a.CardType.INVALID,cards:[],mainRank:a.Rank.THREE,power:0};const t=[p,y,l,o,d,c,u,h,m];for(const r of t){const t=r(e);if(t)return t}return{type:a.CardType.INVALID,cards:[...e],mainRank:a.Rank.THREE,power:0}}function I(e,t){return e.type!==t.type?e.type===a.CardType.JOKER_BOMB?1:t.type===a.CardType.JOKER_BOMB?-1:e.type===a.CardType.BOMB&&t.type!==a.CardType.BOMB?1:t.type===a.CardType.BOMB&&e.type!==a.CardType.BOMB?-1:0:e.power-t.power}t.identifyCardPattern=g,t.compareCardPatterns=I,t.canPlayCards=function(e,t){const r=g(e);return r.type!==a.CardType.INVALID&&(!t||I(r,t)>0)}},927:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.GameUI=void 0;const a=r(731),n=r(458),s=r(709);t.GameUI=class{constructor(){this.currentPlayerId="player_0",this.selectedCards=[],this.engine=new a.GameEngine,this.setupEventListeners(),this.setupGameEngineListeners()}setupEventListeners(){const e=document.getElementById("start-game-btn");e&&e.addEventListener("click",()=>this.startNewGame());const t=document.getElementById("call-landlord-btn");t&&t.addEventListener("click",()=>this.callLandlord());const r=document.getElementById("pass-landlord-btn");r&&r.addEventListener("click",()=>this.passLandlord());const a=document.getElementById("play-cards-btn");a&&a.addEventListener("click",()=>this.playSelectedCards());const n=document.getElementById("pass-btn");n&&n.addEventListener("click",()=>this.pass());const s=document.getElementById("reset-game-btn");s&&s.addEventListener("click",()=>this.resetGame());const i=document.getElementById("new-game-btn");i&&i.addEventListener("click",()=>this.startNewGame())}setupGameEngineListeners(){this.engine.addEventListener("gameStart",()=>{console.log("游戏开始"),this.hideSetupPanel(),this.showGameBoard()}),this.engine.addEventListener("stateChange",e=>{this.updateGameDisplay(e)}),this.engine.addEventListener("gameEnd",e=>{this.showGameResult(e)}),this.engine.addEventListener("error",e=>{this.showMessage(e.message,"error")})}startNewGame(){try{const e=document.getElementById("player1").value||"玩家1",t=document.getElementById("player2").value||"玩家2",r=document.getElementById("player3").value||"玩家3";this.engine.createNewGame("game_1",[e,t,r]),this.engine.startGame(),this.hideResultPanel(),this.showMessage("游戏开始！","success")}catch(e){this.showMessage(e.message,"error")}}callLandlord(){try{this.engine.callLandlord(this.currentPlayerId)}catch(e){this.showMessage(e.message,"error")}}passLandlord(){try{this.engine.passLandlord(this.currentPlayerId)}catch(e){this.showMessage(e.message,"error")}}playSelectedCards(){if(0!==this.selectedCards.length)try{this.engine.playCards(this.currentPlayerId,this.selectedCards),this.selectedCards=[]}catch(e){this.showMessage(e.message,"error")}else this.showMessage("请选择要出的牌","error")}pass(){try{this.engine.pass(this.currentPlayerId)}catch(e){this.showMessage(e.message,"error")}}resetGame(){try{this.engine.resetGame(),this.engine.startGame(),this.selectedCards=[],this.showMessage("游戏已重置，重新开始！","success")}catch(e){this.showMessage(e.message,"error")}}updateGameDisplay(e){this.updateGameStatus(e),this.updatePlayerInfo(e),this.updatePlayerCards(e),this.updateLastPlayedCards(e),this.updateActionButtons(e)}updateGameStatus(e){const t=document.getElementById("game-state"),r=document.getElementById("current-player");if(t){let r="";switch(e.state){case s.GameState.WAITING:r="等待开始";break;case s.GameState.BIDDING:r="叫地主阶段";break;case s.GameState.PLAYING:r="游戏进行中";break;case s.GameState.FINISHED:r="游戏结束"}t.textContent=r}if(r){const t=e.players[e.currentPlayer];r.textContent=`当前玩家: ${t?t.name:"无"}`}}updatePlayerInfo(e){e.players.forEach((e,t)=>{const r=document.getElementById(`player-${t}`);if(r&&2!==t){const t=r.querySelector(".player-name"),a=r.querySelector(".card-count"),n=r.querySelector(".player-role");t&&(t.textContent=e.name),a&&(a.textContent=`${e.cards.length}张牌`),n&&(n.textContent=e.isLandlord?"地主":"")}});const t=document.getElementById("current-player-info");if(t){const r=e.players[e.currentPlayer],a=t.querySelector(".player-name"),n=t.querySelector(".player-role");a&&(a.textContent=r?r.name:"当前玩家"),n&&(n.textContent=r&&r.isLandlord?"地主":"")}}updatePlayerCards(e){const t=document.getElementById("player-cards");if(!t)return;const r=e.players[e.currentPlayer];r&&(t.innerHTML="",r.cards.forEach(e=>{const r=this.createCardElement(e);r.addEventListener("click",()=>this.toggleCardSelection(e,r)),t.appendChild(r)}))}createCardElement(e){const t=document.createElement("div");return t.className="card",t.textContent=e.display,e.suit===n.Suit.HEARTS||e.suit===n.Suit.DIAMONDS?t.classList.add("red"):e.suit===n.Suit.SPADES||e.suit===n.Suit.CLUBS?t.classList.add("black"):t.classList.add("joker"),t}toggleCardSelection(e,t){const r=this.selectedCards.findIndex(t=>t.display===e.display);r>=0?(this.selectedCards.splice(r,1),t.classList.remove("selected")):(this.selectedCards.push(e),t.classList.add("selected"))}updateLastPlayedCards(e){const t=document.getElementById("last-cards"),r=document.getElementById("last-player");if(t&&(e.lastPlayedPattern&&e.lastPlayedPattern.cards.length>0?(t.innerHTML="",e.lastPlayedPattern.cards.forEach(e=>{const r=this.createCardElement(e);r.style.transform="scale(0.8)",t.appendChild(r)})):t.innerHTML='<span class="no-cards">暂无</span>'),r)if(e.lastPlayerId){const t=e.players.find(t=>t.id===e.lastPlayerId);r.textContent=t?`${t.name} 出牌`:""}else r.textContent=""}updateActionButtons(e){const t=document.getElementById("call-landlord-btn"),r=document.getElementById("pass-landlord-btn"),a=document.getElementById("play-cards-btn"),n=document.getElementById("pass-btn"),i=document.getElementById("reset-game-btn");[t,r,a,n,i].forEach(e=>{e&&e.classList.add("hidden")});const l=e.players[e.currentPlayer];l&&(this.currentPlayerId=l.id),e.state===s.GameState.BIDDING?(t&&t.classList.remove("hidden"),r&&r.classList.remove("hidden")):e.state===s.GameState.PLAYING&&(a&&a.classList.remove("hidden"),n&&n.classList.remove("hidden")),e.state!==s.GameState.PLAYING&&e.state!==s.GameState.FINISHED||i&&i.classList.remove("hidden")}showGameResult(e){const t=document.getElementById("result-panel"),r=document.getElementById("winner-info"),a=document.getElementById("game-stats");if(t&&t.classList.remove("hidden"),r&&e.winner){const t=e.isLandlordWin?"地主获胜":"农民获胜";r.textContent=`${e.winner.name} 获胜！（${t}）`}if(a){const e=this.engine.getGameStats();a.innerHTML=`\n        <p>游戏时长: ${Math.floor(e.gameTime/1e3)}秒</p>\n        <p>总回合数: ${e.movesCount}</p>\n        <p>地主: ${e.landlord}</p>\n      `}}showMessage(e,t="success"){const r=document.getElementById("message-panel");r&&(r.textContent=e,r.className=`message-panel ${t} show`,setTimeout(()=>{r.classList.remove("show")},3e3))}hideSetupPanel(){const e=document.getElementById("setup-panel");e&&e.classList.add("hidden")}showGameBoard(){const e=document.getElementById("game-board");e&&e.classList.remove("hidden")}hideResultPanel(){const e=document.getElementById("result-panel");e&&e.classList.add("hidden")}destroy(){this.engine.destroy(),this.selectedCards=[]}}}},t={};!function r(a){var n=t[a];if(void 0!==n)return n.exports;var s=t[a]={exports:{}};return e[a].call(s.exports,s,s.exports,r),s.exports}(156)})();